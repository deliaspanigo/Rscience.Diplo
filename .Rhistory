devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
validate(
need(input$in1 == "A", 'Elegiste otra que no es la A.')
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
font-weight: bold;
}
.check-letter-error {
color: #ff0000;
}
.choose-state-error {
color: #00ff00;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),   # Frase 01
need(input$in2 != '', 'Please choose a state.'),  # Frase 02
need(input$in1 == "A", 'You chose a letter other than A.', class = "check-letter-error")  # Frase03
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
observe({
shinyjs::runjs("
$('.check-letter-error').closest('.shiny-output-error-validation').addClass('check-letter-error');
$('.choose-state-error').closest('.shiny-output-error-validation').addClass('choose-state-error');
")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
font-weight: bold;
}
.check-letter-error {
color: #ff0000;
}
.choose-state-error {
color: #00ff00;
}
.custom-warning {
color: #ff8000;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),   # Frase 01
need(input$in2 != '', 'Please choose a state.'),  # Frase 02
validate(
need(input$in1 == "A", HTML('<span class="custom-warning">You chose a letter other than A.</span>'))
) # Frase03
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
font-weight: bold;
}
.check-letter-error {
color: #ff0000;
}
.choose-state-error {
color: #00ff00;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),   # Frase 01
need(input$in2 != '', 'Please choose a state.'),  # Frase 02
need(input$in1 == "A", 'You chose a letter other than A.', class = "check-letter-error")  # Frase03
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
observe({
shinyjs::runjs("
$('.check-letter-error').closest('.shiny-output-error-validation').addClass('check-letter-error');
$('.choose-state-error').closest('.shiny-output-error-validation').addClass('choose-state-error');
")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
font-weight: bold;
}
.check-letter-error {
color: #ff0000;
}
.choose-state-error {
color: #00ff00;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),   # Frase 01
need(input$in2 != '', 'Please choose a state.')  # Frase 02
)
validate(
need(input$in1 == "A", 'You chose a letter other than A.') , errorClass = "check-letter-error")  # Frase03
)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
font-weight: bold;
}
.check-letter-error {
color: #ff0000;
}
.choose-state-error {
color: #00ff00;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),   # Frase 01
need(input$in2 != '', 'Please choose a state.')  # Frase 02
)
validate(
need(input$in1 == "A", 'You chose a letter other than A.') , errorClass = "check-letter-error"  # Frase03
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
observe({
shinyjs::runjs("
$('.check-letter-error').closest('.shiny-output-error-validation').addClass('check-letter-error');
$('.choose-state-error').closest('.shiny-output-error-validation').addClass('choose-state-error');
")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
validate(
need(input$in1 != "A", 'Elegiste A'),
errorClass = "AAA"
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-validation {
color: #ff0000;
font-weight: bold;
}
")),
tags$style(HTML("
.shiny-output-error-AAA {
color: #ffff00;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.')
)
validate(
need(input$in1 != "A", 'Elegiste A'),
errorClass = "AAA"
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-AVISO {
color: #ff0000;
font-weight: bold;
}
")),
tags$style(HTML("
.shiny-output-error-ERRO {
color: #ffff00;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.'),
errorClass = "AVISO"
)
validate(
need(input$in1 != "A", 'Elegiste A'),
errorClass = "ERROR"
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$head(
tags$style(HTML("
.shiny-output-error-AVISO {
color: #ff0000;
font-weight: bold;
}
")),
tags$style(HTML("
.shiny-output-error-ERROR {
color: #ffff00;
font-weight: bold;
}
"))
),
checkboxGroupInput('in1', 'Check some letters', choices = head(LETTERS)),
selectizeInput('in2', 'Select a state', choices = state.name),
plotOutput('plot')
)
server <- function(input, output) {
output$plot <- renderPlot({
validate(
need(input$in1, 'Check at least one letter!'),
need(input$in2 != '', 'Please choose a state.'),
errorClass = "AVISO"
)
validate(
need(input$in1 != "A", 'Elegiste A'),
errorClass = "ERROR"
)
plot(1:10, main = paste(c(input$in1, input$in2), collapse = ', '))
})
}
shinyApp(ui, server)
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
