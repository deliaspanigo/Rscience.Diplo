input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
input_master_files <- list.files(input_folder_master)
input_master_files
input_master_files <- list.files(input_folder_master, full.names = T)
input_master_files
input_master_paths <- list.files(input_folder_master, full.names = T)
input_master_files <- basename(input_master_paths)
input_master_files
# Input master paths and files
input_master_paths <- list.files(input_folder_master, full.names = T)
input_master_files <- basename(input_master_paths)
input_master_files
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"   # Nombre del paquete
master_semana    <- "master_semana01"  # Subcarpeta master de la semana
special_folder   <- file.path("inst", "extdata", "master_diplo", master_semana)
# # # ---- Input objects ---- # # #
input_value_old_str <- "_master"
input_value_new_str <- "_mod"
input_vector_new_output_ext <- c("pdf", "html", "docx", "zip")
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# Input master paths and files
input_master_paths <- list.files(input_folder_master, full.names = T)
input_master_files <- basename(input_master_paths)
# Parts of name
p1_name <- tools::file_path_sans_ext(input_file_rmd)
input_master_files
# Parts of name
# Encontrar elementos que terminan con ".Rmd"
archivos_rmd <- grep("\\.Rmd$", input_master_files, value = TRUE)
archivos_rmd <- grep("\\.Rmd$", input_master_files, value = TRUE)
selected_file_rmd <- archivos_rmd[1]
p1_name <- tools::file_path_sans_ext(selected_file_rmd)
p2_name <- tools::file_ext(selected_file_rmd)
# Input master paths and files
input_vector_master_paths <- list.files(input_folder_master, full.names = T)
input_vector_master_files <- basename(input_master_paths)
# Parts of name
# Encontrar elementos que terminan con ".Rmd"
archivos_rmd <- grep("\\.Rmd$", input_vector_master_files, value = TRUE)
selected_file_rmd <- archivos_rmd[1]
p1_name <- tools::file_path_sans_ext(selected_file_rmd)
p2_name <- tools::file_ext(selected_file_rmd)
# Parts of name
# Encontrar elementos que terminan con ".Rmd"
archivos_rmd <- grep("\\.Rmd$", input_vector_master_files, value = TRUE)
#selected_file_rmd <- archivos_rmd[1]
p1_name <- tools::file_path_sans_ext(archivos_rmd)
p2_name <- tools::file_ext(archivos_rmd)
p2_name
# Parts of name
# Encontrar elementos que terminan con ".Rmd"
archivos_rmd <- grep("\\.Rmd$", input_vector_master_files, value = TRUE)
archivos_rmd <- c(archivos_rmd, archivos_rmd)
#selected_file_rmd <- archivos_rmd[1]
p1_name <- tools::file_path_sans_ext(archivos_rmd)
p2_name <- tools::file_ext(archivos_rmd)
p1_name
# Parts of name
# Encontrar elementos que terminan con ".Rmd"
input_vector_master_rmd_files <- grep("\\.Rmd$", input_vector_master_files, value = TRUE)
p1_name <- tools::file_path_sans_ext(archivos_rmd)
p2_name <- tools::file_ext(archivos_rmd)
output_vector_master_rmd_files   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_vector_master_rmd_files   <- gsub(pattern = input_old_str,
replacement = input_new_str,
x = output_vector_master_rmd_files)
output_vector_master_rmd_files   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_vector_master_rmd_files   <- gsub(pattern = input_value_old_str,
replacement = input_value_new_str,
x = output_vector_master_rmd_files)
output_vector_master_rmd_files
output_value_general_name <- tools::file_path_sans_ext(output_vector_master_rmd_files[1])
output_vector_master_rmd_files <- paste0(output_value_general_name, ".", input_vector_new_output_ext)
output_vector_master_rmd_files
output_value_general_name <- tools::file_path_sans_ext(output_vector_master_rmd_files[1])
output_vector_new_files <- paste0(output_value_general_name, ".", input_vector_new_output_ext)
# Output folder and output paths
new_temp_folder <- tempdir()
# Output folder and output paths
new_temp_folder <- tempdir()
#new_temp_folder <- normalizePath("super_folder")
output_vector_new_paths <- file.path(new_temp_folder, output_vector_new_files)
new_temp_folder
# Copy from original input files
file.copy(from = input_vector_master_paths,
to = output_vector_master_paths,
overwrite = TRUE)
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# Input master paths and files
input_vector_master_paths <- list.files(input_folder_master, full.names = T)
input_vector_master_files <- basename(input_master_paths)
input_vector_master_files
# Parts of name
# Encontrar elementos que terminan con ".Rmd"
input_vector_master_rmd_files <- grep("\\.Rmd$", input_vector_master_files, value = TRUE)
p1_name <- tools::file_path_sans_ext(archivos_rmd)
p2_name <- tools::file_ext(archivos_rmd)
output_vector_master_rmd_files   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_vector_master_rmd_files   <- gsub(pattern = input_value_old_str,
replacement = input_value_new_str,
x = output_vector_master_rmd_files)
output_vector_master_rmd_files
output_vector_master_rmd_files   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_vector_master_rmd_files
p1_name <- tools::file_path_sans_ext(archivos_rmd)
p2_name <- tools::file_ext(archivos_rmd)
archivos_rmd
p1_name <- tools::file_path_sans_ext(input_vector_master_rmd_files)
p2_name <- tools::file_ext(input_vector_master_rmd_files)
output_vector_master_rmd_files   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_vector_master_rmd_files   <- gsub(pattern = input_value_old_str,
replacement = input_value_new_str,
x = output_vector_master_rmd_files)
output_vector_master_rmd_files
tempdir()
tempdir()
tempdir()
input_vector_master_files
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"
special_folder <- file.path("inst", "extdata", "master_diplo", "clase01")
input_old_str <- "_master"
input_new_str <- "_mod"
input_render_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_render_file_css   <- "style.css"
input_render_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
input_old_str <- "_master"
input_new_str <- "_mod"
input_render_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_render_file_css   <- "style.css"
input_render_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
input_path_css   <- file.path(input_folder_master, input_file_css)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"
special_folder <- file.path("inst", "extdata", "master_diplo", "clase01")
input_old_str <- "_master"
input_new_str <- "_mod"
input_render_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_render_file_css   <- "style.css"
input_render_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_file_css   <- "style.css"
input_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# Out File and paths
p1_name <- tools::file_path_sans_ext(input_file_rmd)
p2_name <- tools::file_ext(input_file_rmd)
output_file_rmd   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_file_rmd   <- gsub(pattern = input_old_str,
replacement = input_new_str,
x = output_file_rmd)
output_file_rmd
output_general_name <- tools::file_path_sans_ext(output_file_rmd)
output_file_pdf   <- paste0(output_general_name, ".pdf")
output_file_html  <- paste0(output_general_name, ".html")
output_file_word  <- paste0(output_general_name, ".docx")
output_file_zip   <- paste0(output_general_name, ".zip")
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"
special_folder <- file.path("inst", "extdata", "master_diplo", "clase01")
input_old_str <- "_master"
input_new_str <- "_mod"
input_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_file_css   <- "style.css"
input_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# Out File and paths
p1_name <- tools::file_path_sans_ext(input_file_rmd)
p2_name <- tools::file_ext(input_file_rmd)
output_file_rmd   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_file_rmd   <- gsub(pattern = input_old_str,
replacement = input_new_str,
x = output_file_rmd)
output_file_css   <- input_file_css
output_file_png01 <- input_file_png01
output_general_name <- tools::file_path_sans_ext(output_file_rmd)
output_file_pdf     <- paste0(output_general_name, ".pdf")
output_file_html    <- paste0(output_general_name, ".html")
output_file_word    <- paste0(output_general_name, ".docx")
output_file_zip     <- paste0(output_general_name, ".zip")
# Output folder and output paths
new_temp_folder <- tempdir()
#new_temp_folder <- normalizePath("super_folder")
output_path_rmd    <- file.path(new_temp_folder, output_file_rmd)
output_path_png01  <- file.path(new_temp_folder, output_file_png01)
output_path_css    <- file.path(new_temp_folder, output_file_css)
output_path_pdf    <- file.path(new_temp_folder, output_file_pdf)
output_path_html   <- file.path(new_temp_folder, output_file_html)
output_path_word   <- file.path(new_temp_folder, output_file_word)
output_path_zip    <- file.path(new_temp_folder, output_file_zip)
# Copy from original input files
file.copy(from = input_path_rmd,   to = output_path_rmd,   overwrite = TRUE)
file.copy(from = input_path_png01, to = output_path_png01, overwrite = TRUE)
file.copy(from = input_path_css,   to = output_path_css,   overwrite = TRUE)
input_path_rmd
output_path_rmd
input_path_rmd
# Copy from original input files
file.copy(from = input_path_rmd,   to = output_path_rmd,   overwrite = TRUE)
file.copy(from = input_path_png01, to = output_path_png01, overwrite = TRUE)
file.copy(from = input_path_css,   to = output_path_css,   overwrite = TRUE)
input_path_png01
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"
special_folder <- file.path("inst", "extdata", "master_diplo", "clase01")
input_old_str <- "_master"
input_new_str <- "_mod"
input_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_file_css   <- "style.css"
input_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
input_path_css
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# Out File and paths
p1_name <- tools::file_path_sans_ext(input_file_rmd)
p2_name <- tools::file_ext(input_file_rmd)
output_file_rmd   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_file_rmd   <- gsub(pattern = input_old_str,
replacement = input_new_str,
x = output_file_rmd)
output_file_css   <- input_file_css
output_file_png01 <- input_file_png01
output_general_name <- tools::file_path_sans_ext(output_file_rmd)
output_file_pdf     <- paste0(output_general_name, ".pdf")
output_file_html    <- paste0(output_general_name, ".html")
output_file_word    <- paste0(output_general_name, ".docx")
output_file_zip     <- paste0(output_general_name, ".zip")
# Output folder and output paths
new_temp_folder <- tempdir()
#new_temp_folder <- normalizePath("super_folder")
output_path_rmd    <- file.path(new_temp_folder, output_file_rmd)
output_path_png01  <- file.path(new_temp_folder, output_file_png01)
output_path_css    <- file.path(new_temp_folder, output_file_css)
output_path_pdf    <- file.path(new_temp_folder, output_file_pdf)
output_path_html   <- file.path(new_temp_folder, output_file_html)
output_path_word   <- file.path(new_temp_folder, output_file_word)
output_path_zip    <- file.path(new_temp_folder, output_file_zip)
# Copy from original input files
file.copy(from = input_path_rmd,   to = output_path_rmd,   overwrite = TRUE)
file.copy(from = input_path_png01, to = output_path_png01, overwrite = TRUE)
file.copy(from = input_path_css,   to = output_path_css,   overwrite = TRUE)
input_path_rmd
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"
special_folder <- file.path("inst", "extdata", "master_diplo", "clase01")
input_old_str <- "_master"
input_new_str <- "_mod"
input_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_file_css   <- "style.css"
input_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# Out File and paths
p1_name <- tools::file_path_sans_ext(input_file_rmd)
p2_name <- tools::file_ext(input_file_rmd)
output_file_rmd   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_file_rmd   <- gsub(pattern = input_old_str,
replacement = input_new_str,
x = output_file_rmd)
input_file_css
output_file_css   <- input_file_css
output_file_png01 <- input_file_png01
output_general_name <- tools::file_path_sans_ext(output_file_rmd)
output_file_pdf     <- paste0(output_general_name, ".pdf")
output_file_html    <- paste0(output_general_name, ".html")
output_file_word    <- paste0(output_general_name, ".docx")
output_file_zip     <- paste0(output_general_name, ".zip")
# Output folder and output paths
new_temp_folder <- tempdir()
#new_temp_folder <- normalizePath("super_folder")
output_path_rmd    <- file.path(new_temp_folder, output_file_rmd)
output_path_png01  <- file.path(new_temp_folder, output_file_png01)
output_path_css    <- file.path(new_temp_folder, output_file_css)
output_path_pdf    <- file.path(new_temp_folder, output_file_pdf)
output_path_html   <- file.path(new_temp_folder, output_file_html)
output_path_word   <- file.path(new_temp_folder, output_file_word)
output_path_zip    <- file.path(new_temp_folder, output_file_zip)
# Copy from original input files
file.copy(from = input_path_rmd,   to = output_path_rmd,   overwrite = TRUE)
file.copy(from = input_path_png01, to = output_path_png01, overwrite = TRUE)
file.copy(from = input_path_css,   to = output_path_css,   overwrite = TRUE)
input_path_css
output_path_css
output_path_png01
input_path_css
exists(input_path_css)
# Execution time...
execution_time <- format(Sys.time(), "%Y_%m_%d_%H_%M_%S")
# Special folder
the_package_name <- "Rscience.Diplo"
special_folder <- file.path("inst", "extdata", "master_diplo", "clase01")
input_old_str <- "_master"
input_new_str <- "_mod"
input_file_rmd   <- 'report_diplo_clase01_master.Rmd'
input_file_css   <- "styles.css"
input_file_png01 <- "fcefyn.png"
# # # Folder package
# Depende de si lo toma como local o como parte del package
# En Desarrollo lo toma local.
# Para el usuario final lo toma como package.
# De esta forma corre bien para cualquiera de los dos.
input_path_package   <- base::system.file(package = the_package_name)
input_folder_package <- file.path(input_path_package, special_folder)
input_folder_local   <- file.path(getwd(), special_folder)
input_folder_master <-  ifelse(input_folder_package != "",
input_folder_package, input_folder_local)
# # # Input paths
input_path_rmd   <- file.path(input_folder_master, input_file_rmd)
input_path_css   <- file.path(input_folder_master, input_file_css)
input_path_png01 <- file.path(input_folder_master, input_file_png01)
# Out File and paths
p1_name <- tools::file_path_sans_ext(input_file_rmd)
p2_name <- tools::file_ext(input_file_rmd)
output_file_rmd   <- paste0(p1_name, "_", execution_time, ".", p2_name)
output_file_rmd   <- gsub(pattern = input_old_str,
replacement = input_new_str,
x = output_file_rmd)
output_file_css   <- input_file_css
output_file_png01 <- input_file_png01
output_general_name <- tools::file_path_sans_ext(output_file_rmd)
output_file_pdf     <- paste0(output_general_name, ".pdf")
output_file_html    <- paste0(output_general_name, ".html")
output_file_word    <- paste0(output_general_name, ".docx")
output_file_zip     <- paste0(output_general_name, ".zip")
# Output folder and output paths
new_temp_folder <- tempdir()
#new_temp_folder <- normalizePath("super_folder")
output_path_rmd    <- file.path(new_temp_folder, output_file_rmd)
output_path_png01  <- file.path(new_temp_folder, output_file_png01)
output_path_css    <- file.path(new_temp_folder, output_file_css)
output_path_pdf    <- file.path(new_temp_folder, output_file_pdf)
output_path_html   <- file.path(new_temp_folder, output_file_html)
output_path_word   <- file.path(new_temp_folder, output_file_word)
output_path_zip    <- file.path(new_temp_folder, output_file_zip)
# Copy from original input files
file.copy(from = input_path_rmd,   to = output_path_rmd,   overwrite = TRUE)
file.copy(from = input_path_png01, to = output_path_png01, overwrite = TRUE)
file.copy(from = input_path_css,   to = output_path_css,   overwrite = TRUE)
# Objetos de entorno
render_env <- new.env()
render_env$"BASE" <- database()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
file.exists("asdas")
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
devtools::document()
