# Crear un ejemplo de data.frame
df <- data.frame(
col1 = c(1, 2, 3),
col2 = c("a", "b", "c"),
col3 = c(4.5, 5.5, 6.5),
col4 = as.factor(c("x", "y", "z"))
)
# Crear un vector con los nombres de las columnas
column_names <- names(df)
# Identificar si las columnas son numéricas
is_numeric <- sapply(df, is.numeric)
# UI de la aplicación
ui <- fluidPage(
tags$head(
tags$style(HTML("
.numeric-option {
background-color: green;
}
.non-numeric-option {
background-color: white;
}
"))
),
selectInput("selected_col", "Seleccionar columna:", choices = column_names)
)
# Servidor de la aplicación
server <- function(input, output, session) {
# Actualizar las opciones del selectInput con las clases CSS correspondientes
observe({
# Generar las opciones con las clases CSS correspondientes
options <- lapply(seq_along(column_names), function(i) {
option_name <- column_names[i]
if (is_numeric[i]) {
tags$option(option_name, class = "numeric-option")
} else {
tags$option(option_name, class = "non-numeric-option")
}
})
# Actualizar el selectInput con las nuevas opciones
updateSelectInput(session, "selected_col", choices = setNames(column_names, column_names), selectize = FALSE)
# Insertar las opciones con las clases CSS
shiny::insertUI(
selector = "#selected_col + .selectize-control .selectize-dropdown-content",
where = "beforeEnd",
ui = tags$div(options)
)
})
}
# Ejecutar la aplicación Shiny
shinyApp(ui, server)
library(shiny)
# Crear un ejemplo de data.frame
df <- data.frame(
col1 = c(1, 2, 3),
col2 = c("a", "b", "c"),
col3 = c(4.5, 5.5, 6.5),
col4 = as.factor(c("x", "y", "z"))
)
# Crear un vector con los nombres de las columnas
column_names <- names(df)
# Identificar si las columnas son numéricas
is_numeric <- sapply(df, is.numeric)
# UI de la aplicación
ui <- fluidPage(
tags$head(
tags$style(HTML("
.numeric-option {
background-color: green;
}
.non-numeric-option {
background-color: white;
}
"))
),
selectInput("selected_col", "Seleccionar columna:", choices = column_names)
)
# Servidor de la aplicación
server <- function(input, output, session) {
# Actualizar las opciones del selectInput con las clases CSS correspondientes
observe({
# Generar las opciones con las clases CSS correspondientes
options <- lapply(seq_along(column_names), function(i) {
option_name <- column_names[i]
if (is_numeric[i]) {
tags$option(option_name, class = "numeric-option")
} else {
tags$option(option_name, class = "non-numeric-option")
}
})
# Actualizar el selectInput con las nuevas opciones
updateSelectInput(session, "selected_col", choices = setNames(column_names, column_names), selectize = FALSE)
# Insertar las opciones con las clases CSS
shiny::insertUI(
selector = "#selected_col + .selectize-control .selectize-dropdown-content",
where = "beforeEnd",
ui = tags$div(options)
)
})
}
# Ejecutar la aplicación Shiny
shinyApp(ui, server)
library(shiny)
# Crear un ejemplo de data.frame
df <- data.frame(
col1 = c(1, 2, 3),
col2 = c("a", "b", "c"),
col3 = c(4.5, 5.5, 6.5),
col4 = as.factor(c("x", "y", "z"))
)
# Crear un vector con los nombres de las columnas
column_names <- names(df)
# Identificar si las columnas son numéricas
is_numeric <- sapply(df, is.numeric)
# UI de la aplicación
ui <- fluidPage(
tags$head(
tags$style(HTML("
.numeric-option {
background-color: green;
}
.non-numeric-option {
background-color: white;
}
"))
),
selectInput("selected_col", "Seleccionar columna:", choices = column_names)
)
# Servidor de la aplicación
server <- function(input, output, session) {
# Actualizar las opciones del selectInput con las clases CSS correspondientes
observe({
# Generar las opciones con las clases CSS correspondientes
options <- lapply(seq_along(column_names), function(i) {
option_name <- column_names[i]
if (is_numeric[i]) {
tags$option(option_name, class = "numeric-option")
} else {
tags$option(option_name, class = "non-numeric-option")
}
})
# Actualizar el selectInput con las nuevas opciones
updateSelectInput(session, "selected_col", choices = setNames(column_names, column_names))
# Insertar las opciones con las clases CSS
shiny::insertUI(
selector = "#selected_col + .selectize-control .selectize-dropdown-content",
where = "beforeEnd",
ui = tags$div(options)
)
})
}
# Ejecutar la aplicación Shiny
shinyApp(ui, server)
# https://bookdown.org/yihui/rmarkdown-cookbook/chunk-styling.html
library("devtools")
# openxlsx::read.xlsx()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::document()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
head(mtcars)
head(x = mtcars, n = 5)
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
openxlsx::read.xlsx()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
format(Sys.time(), "%Y-%m-%d %H:%M:%S")
fecha_hora_con_dia <- format(fecha_hora_actual, "%A, %Y-%m-%d %H:%M:%S")
fecha_hora_actual <- Sys.time()
fecha_hora_formateada <- format(fecha_hora_actual, "%Y-%m-%d %H:%M:%S")
print(fecha_hora_formateada)
fecha_hora_con_dia <- format(fecha_hora_actual, "%A, %Y-%m-%d %H:%M:%S")
print(fecha_hora_con_dia)
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]", "_", original_time)
execution_time
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]\\s", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]\\s", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]\\s]+", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]\\s]", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]\\s", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]] ", "_", original_time)
execution_time
# # # Execution time...
original_time  <- format(Sys.time(), "%Y-%m-%d %H:%M:%S")
execution_time <- gsub("[[:punct:]]", "_", original_time)
execution_time <- gsub(" ", "_", execution_time)
execution_time
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
getwd()
dir.create("./inst/www")
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
library("devtools")
devtools::load_all()
Rscience.Diplo:::app_001_diplo()
